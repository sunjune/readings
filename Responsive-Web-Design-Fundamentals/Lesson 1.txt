The use of mobile devices to surf the web is growing at an astronomical pace, but unfortunately much of the web isn't optimized for those mobile devices. Mobile devices are often constrained by display size and require a different approach to how content is laid out on screen.
移动设备用于浏览网页的增长非常迅猛，但是大部分网站都没有为移动设备做优化。通常来说，移动设备受限于显示尺寸并且对于内容在屏幕上的布局也有不同的方式。

In this lesson
本节主要内容

Set the viewport  设置viewport
Size content to the viewport  在viewport中调整内容显示尺寸
Use CSS media queries for responsiveness  使用CSS的媒体侦测实现响应性
How to choose breakpoints 如何选择折行点

There is a multitude of different screen sizes across phones, “phablets”, tablets, desktops, game consoles, TVs, even wearables. Screen sizes will always be changing, so it’s important that your site can adapt to any screen size, today or in the future.
各种不同的屏幕尺寸实在是太多了，手机、平板手机、平板电脑、游戏掌机、智能电视甚至还有可穿戴设备。屏幕尺寸总是在变化，所以重要的是你的站点要能适应任何屏幕尺寸，无论是现在还是将来。

Responsive web design, originally defined by Ethan Marcotte in A List Apart responds to the needs of the users and the devices they’re using. The layout changes based on the size and capabilities of the device. For example, on a phone, users would see content shown in a single column view; a tablet might show the same content in two columns.
响应式页面设计，最初是由Ethan Marcotte在A List Apart中定义为，对用户以及他们所用设备的需要作出回应。根据设备尺寸和功能调整页面布局。例如，在手机上用户会看到内容显示为一列，而在平板电脑上同样的内容会显示成两列。
(A List Apart在线地址： http://alistapart.com/article/responsive-web-design/)

Set the viewport
设置viewport
Pages optimized for a variety of devices must include a meta viewport element in the head of the document. A meta viewport tag gives the browser instructions on how to control the page’s dimensions and scaling.
要为各种设备优化页面，必须在document的头部包含名为viewport的meta标签。viewport这个meta标签告诉浏览器如何控制页面的尺寸和缩放比例。

Key Takeaways
要点
Use meta viewport tag to control the width and scaling of the browsers viewport.
使用viewport这个meta标签来控制浏览器可见窗口的宽度和缩放
Include width=device-width to match the screen's width in device independent pixels.
包含width=device-width来匹配与设备像素无关的屏幕宽度
Include initial-scale=1 to establish a 1:1 relationship between CSS pixels and device independent pixels.
包含initial-scale=1在CSS像素和与设备无关像素之间建立1:1的关系
Ensure your page is accessible by not disabling user scaling.
确保你的页面没有禁止用户缩放

In order to attempt to provide the best experience, mobile browsers will render the page at a desktop screen width (usually about 980px, though this varies across devices), and then try to make the content look better by increasing font sizes and scaling the content to fit the screen. For users, this means that font sizes may appear inconsistently and they have to double-tap or pinch-zoom in order to be able to see and interact with the content.
为了试图提供最佳体验，移动设备浏览器将按桌面宽度渲染页面（因设备而异，通常是980px），并且力图通过增大字号和缩放内容适应屏幕来让内容看起来好一些。对用户来说，这就意味着字体大小会不一致并且要对页面内容连按放大或双指缩放来看清楚或与之交互。

<meta name="viewport" content="width=device-width, initial-scale=1.0">

Using the meta viewport value width=device-width instructs the page to match the screen’s width in device independent pixels. This allows the page to reflow content to match different screen sizes, whether rendered on a small mobile phone or a large desktop monitor.
将viewport这个meta标签的值设为width=device-width，让页面用与设备无关的像素来匹配屏幕宽度。这样一来页面就可以重排内容来适应不同的屏幕宽度，无论是在手机这种小屏幕还是桌面这种大显示器。

Some browsers will keep the page’s width constant when rotating to landscape mode, and zoom rather than reflow to fill the screen. Adding the attribute initial-scale=1 instructs browsers to establish a 1:1 relationship between CSS pixels and device independent pixels regardless of device orientation, and allows the page to take advantage of the full landscape width.
有些浏览器在旋转到横屏模式的时候会保持页面宽度不变，用缩放而不是重排来填充屏幕。加入initial-scale=1的属性值，无论设备是什么方向都可以让浏览器在CSS像素和与设备无关的像素之间建立1:1的关系，并且页面可以充分利用完整的横屏宽度。

Remember
Use a comma to separate attributes to ensure older browsers can properly parse the attributes.
记住用逗号来分隔属性以确保旧版浏览器能正确解析它们。

