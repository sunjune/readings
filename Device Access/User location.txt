=================
User location
用户位置
=================

The Geolocation API lets you find out where the user is, always with the user's consent. This functionality could be used as part of user queries, e.g. to guide someone to a destination point. It could also be used for 'geo- tagging' some content the user has created, e.g. to mark where a photo was taken.
经过用户同意，地理位置API让你找到用户在哪。这项功能可被用于用户查询的部分，例如，指引某人到目标地点。它也能被用来做'地理-标签'一些用户创建的内容，例如，标注照片是在哪拍的。

The Geolocation API also lets you watch where the user is and keep tabs on them as they move around, always with the user’s consent (and only whilst the page is open), this opens up a lot of interesting usecases - such as integrating with backend systems to prepare an order for collection if the user is close by.
经过用户同意(而且只在页面开着的同时)，地理位置API也能让你观察用户在哪并在他们四处移动的时候保持关注，这展现了大量有趣的用户行为 - 比如结合后端系统，当用户在附近的时候准备一个募集订单。

There are a lot of things that you need to be aware of when using using the Geolocation API and this guide will walk you through the common use-cases and solutions.
在使用地理位置API的时候有很多要了解的地方，本教程将简单讲讲常见的用户行为和解决方案。

======================================
Obtain the user's current location
获得用户当前位置
======================================

The Geolocation API lets you find out where the user is, always with the user's consent. This functionality could be used as part of user queries, e.g. to guide someone to a destination point. It could also be used for 'geo- tagging' some content the user has created, e.g. to mark where a photo was taken.
经过用户同意，地理位置API让你找到用户在哪。这项功能可被用于用户查询的部分，例如，指引某人到目标地点。它也能被用来做'地理-标签'一些用户创建的内容，例如，标注照片是在哪拍的。

In this guide
本节主要内容

  ·When to use Geolocation
  何时使用地理位置
  ·Check for Compatibility
  检查兼容性
  ·Determine the User’s Current Location
  确定用户当前位置
  ·Testing Geolocation with your site
  测试你网站的地理位置
  ·Always Handle Errors
  总是处理错误
  ·Reduce the need to start-up geo location hardware.
  减少启用地理位置硬件的需要
  ·Don’t keep the user waiting, set a timeout
  不要保持用户等待，设置超时
  ·Prefer a coarse location over a fine grained location
  大致位置好过精确的位置

TL;DR
简而言之

  ·Check for Compatibility before you use the API
  在使用API前检查兼容性
  ·Prefer a coarse location, over a fine location
  大致位置就可以，不必精确
  ·Always handle errors
  总是要处理错误
  ·Don't poll for the data too frequently to save the user's battery
  不要过于频繁地投递数据以节省用户电量

The API is device-agnostic; it doesn’t care how the browser determines location, so long as clients can request and receive location data in a standard way. The underlying mechanism might be via GPS, wifi, or simply asking the user to enter their location manually. Since any of these lookups is going to take some time, the API is asynchronous; you pass it a callback method whenever you request a location.
这个API是与设备无关的；它不关心浏览器如何测定位置，只要客户端能以标准方式请求并收到位置数据。底层机制可能是通过GPS、wifi或简单地请用户手动输入他们的位置。因为所有这些查询都会花一些时间，所以API是异步的；当你请求一个位置的时候给它加个回调方法。
When to use Geolocation
何时使用地理位置

  ·Find where the user is closest to a physical location of yours to tailor the user experience
  查看距离你的用户最近的物理位置以定制用户体验
  ·Tailor information (such as news) to the user’s location
  为用户所在位置定制信息(比如新闻)
  ·Show the position of a user on a map
  将用户位置显示在地图上
  ·Tag data created inside your application with the user’s location (i.e, geo-tagging a picture)
  为在你的应用里创建的数据加上用户位置标签(给图片加位置标记)

Check for Compatibility
检查兼容性

The geolocation API is now supported in the majority of browsers, but it is good practice to always check for support before you do anything.
地理位置API现在被主流浏览器所支持，但是在做任何事情之前检查是否支持是个好的作法 。

You can easily check for compatibility by testing for the presence of the geolocation object:
你可以通过检测geolocation对象的存在轻易地检查兼容性。

// check for Geolocation support
if (navigator.geolocation) {
  console.log('Geolocation is supported!');
}
else {
  console.log('Geolocation is not supported for this Browser/OS version yet.');
}

Determine the User’s Current Location
确定用户当前位置

The geolocation API offers a simple ‘one-shot’ method to obtain the user’s location getCurrentPosition(). A call to this method will asynchronously report on the user’s current location.
地理位置API提供一个简单的一次性的方法getCurrentPosition()来获得用户位置。对这个方法的调用将异步报告用户的当前位置。

window.onload = function() {
  var startPos;
  var geoSuccess = function(position) {
    startPos = position;
    document.getElementById('startLat').innerHTML = startPos.coords.latitude;
    document.getElementById('startLon').innerHTML = startPos.coords.longitude;
  };
  navigator.geolocation.getCurrentPosition(geoSuccess);
};

If this is the first time an application on this domain has requested permissions, the browser will typically check for user consent. Depending on the browser, there may also be preferences to always allow - or disallow - permission lookups, in which case the confirmation process will be bypassed.
如果这是这个域名下的应用第一次请求权限，浏览器典型的会检查用户同意。根据浏览器的不同，可能会偏好设置为总是允许 - 或禁止 - 权限查找，在这种情况下确认过程将被跳过。

Depending on the location device your browser is using, the position object might actually contain a lot more than just latitude and longitude, e.g. it could include an altitude or a direction. You can’t tell what extra information that location system will use until it actually returns the data.
根据你浏览器所使用的定位设备的不同，位置对象可能实际上包含不只有经纬度坐标，例如，它可能会含有海拔和方向。直到它实际上返回数据才能知道定位系统会用到哪些额外信息。

Testing Geolocation with your site
在你的网站上测试地理位置

When working with HTML5 geolocation support in an application, it can be useful to debug the output received when using different values for longitude and latitude.
当运行在带有HTML5地理位置支持的应用中，在使用不同的经纬度值时debug输出收到的值是很有用的。

The DevTools support both overriding position values for navigator.geolocation and simulating geolocation not being available via the overrides menu.
开发工具同时支持中断navigator.geolocation的位置值和中断菜单中模拟的geolocation不可用时。

  ·Open up the overrides menu in the DevTools
  在开发工具中打开中断菜单
  ·Check “Override Geolocation” then enter in Lat = 41.4949819 and Lat = -0.1461206
  查看“中断地理位置”然后输入Lat = 41.4949819 and Lat = -0.1461206
  ·Refresh the page and it will now use your overridden positions for geolocation
  刷新页面这时geolocation会使用你强制写入的位置

Always Handle Errors
总是要处理错误

Unfortunately, not all location lookups are successful. Perhaps a GPS could not be located or the user has suddenly disabled location lookups. A second, optional, argument to getCurrentPosition() will be called in the event of an error, so you can notify the user inside the callback:
不幸的是，不是所有的定位都能成功。也许GPS无法定位或用户突然禁用了定位。一秒钟后，可选的，getCurrentPosition()的参数将被一个错误事件调用，这样你就能注意到回调里的用户。

window.onload = function() {
  var startPos;
  var geoSuccess = function(position) {
    startPos = position;
    document.getElementById('startLat').innerHTML = startPos.coords.latitude;
    document.getElementById('startLon').innerHTML = startPos.coords.longitude;
  };
  var geoError = function(position) {
    console.log('Error occurred. Error code: ' + error.code);
    // error.code can be:
    //   0: unknown error
    //   1: permission denied
    //   2: position unavailable (error response from location provider)
    //   3: timed out
  };
  navigator.geolocation.getCurrentPosition(geoSuccess, geoError);
};

Reduce the need to start-up geo location hardware.
减少启动定位硬件的需要

For many use-cases you don’t need to use the most up to date location of the user, you just need a rough estimate.
很多情况下你不需要最新的用户位置数据，你只要大致估计就行。

Use the maximumAge optional property to tell the browser to use a recently obtained geolocation result. This not only returns quicker if the user has requested the data before it also stops the browser from having to start up its geolocation hardware interfaces such as Wifi triangulation or the GPS.
使用可选的maximumAge属性告诉浏览器去使用最近获得的geolocation结果。这不仅能更快地返回用户之前请求的数据也能阻止浏览器启用定位硬件界面比如Wifi三角测量或是GPS。

window.onload = function() {
  var startPos;
  var geoOptions = {
  	maximumAge: 5 * 60 * 1000,
  }

  var geoSuccess = function(position) {
    startPos = position;
    document.getElementById('startLat').innerHTML = startPos.coords.latitude;
    document.getElementById('startLon').innerHTML = startPos.coords.longitude;
  };
  var geoError = function(position) {
    console.log('Error occurred. Error code: ' + error.code);
    // error.code can be:
    //   0: unknown error
    //   1: permission denied
    //   2: position unavailable (error response from location provider)
    //   3: timed out
  };

  navigator.geolocation.getCurrentPosition(geoSuccess, geoError, geoOptions);
};

Don’t keep the user waiting, set a timeout
不要让用户傻等着，设置超时

Unless you set a timeout, your request to get the current position might never return.
除非你设置了超时，不然你获取当前位置的请求可能永远也不返回。

window.onload = function() {
  var startPos;
  var geoOptions = {
     timeout: 10 * 1000
  }

  var geoSuccess = function(position) {
    startPos = position;
    document.getElementById('startLat').innerHTML = startPos.coords.latitude;
    document.getElementById('startLon').innerHTML = startPos.coords.longitude;
  };
  var geoError = function(error) {
    console.log('Error occurred. Error code: ' + error.code);
    // error.code can be:
    //   0: unknown error
    //   1: permission denied
    //   2: position unavailable (error response from location provider)
    //   3: timed out
  };

  navigator.geolocation.getCurrentPosition(geoSuccess, geoError, geoOptions);
};

Prefer a coarse location over a fine grained location
大致的位置好过精确的位置

If you want to find the nearest store to a user it is unlikely that you need 1 meter precision to work that out. The API is designed to give a coarse location that returns as quickly as possible.
如果你想给用户找到最近的商店，好像也用不着精确到1米才能做到。API设计为尽可能快地返回一个大致的位置。

If you do need high-precision it is possible to override the default setting with the enableHighAccuracy option. Use this sparingly: it will be slower to resolve and use more battery.
如果你确实需要高精度可能要以enableHighAccuracy选项来中断默认的设置。要谨慎使用：解析起来会很慢而且会使用更多的电量。

window.onload = function() {
  var startPos;
  var geoOptions = {
    enableHighAccuracy: true
  }

  var geoSuccess = function(position) {
    startPos = position;
    document.getElementById('startLat').innerHTML = startPos.coords.latitude;
    document.getElementById('startLon').innerHTML = startPos.coords.longitude;
  };
  var geoError = function(error) {
    console.log('Error occurred. Error code: ' + error.code);
    // error.code can be:
    //   0: unknown error
    //   1: permission denied
    //   2: position unavailable (error response from location provider)
    //   3: timed out
  };

  navigator.geolocation.getCurrentPosition(geoSuccess, geoError, geoOptions);
};

Getting the user to consent to location sharing
让用户同意分享位置

As a web developer, having access to the user's location opens up a huge number of possibilities such as advanced filtering, pinpointing the user on a map, and offering them pro-active suggestions on things they can do based on their current position.
作为web开发者，对用户位置的访问展开了大量的可能性比如高级过滤、在地图上对用户精准定位、以及基于他们的当前位置为他们一些可做的事情的建议。

As a user, your physical location is a piece of information you want to guard and only give out to people that you trust. This is why the browser shows a prompt when a site asks for their location.
作为用户，你想要保护你的物理位置并仅开放给你信任的人。这就是为什么一个网站想要他们的位置时浏览器要显示一个提示的原因。

In this guide
本节主要内容

  ·Assume the user will not give you their location
  假设用户不会把他们的位置给你
  ·Use a fallback if geolocation is required
  如果geolocation被请求的时候要有退路
  ·Always request access to location on a user gesture
  请求访问位置时一定要有用户确认
  ·Give clear indication that an action will request their location
  清晰地指示某项操作会请求他们的位置
  ·Gently nudge the user to grant permission to their location
  温和地提示用户准许他们的位置权限
  ·Recent user studies have shown that users are distrustful of sites that simply prompt the user to give away their position on page load. So what are the best practice?
  最近的用户研究表明，用户对于页面加载就简单提示他们给出位置信息的网站很不信任。什么才是最佳实践呢？

TL;DR
简而言之

  ·Assume the user will not give you their location
  假设用户不会把他们的位置给你
  ·Make it clear why you need access to the user's location
  讲清楚你为啥要访问用户位置
  ·Don't immediately prompt for access on page load.
  不要在页面加载就马上提示

Assume the user will not give you their location
假设用户不会给你他们的位置

It might be a pain, but many of your users will not want to give you their location so you need to adopt a defensive development style.
这可能挺痛苦，但是你的很多用户都不想把位置暴露给你，所以你得采取保守的开发样式。

  ·Handle all errors out of the geolocation API so that you can adapt your site to this condition
  处理好geolocation API的错误，就能让你的网站适应这些条件
  ·Be clear and explicit about your need for the location
  使你对位置的需要清晰又明确
  ·Use a fallback solution if needed.
  如果需要准备撤退方案

Use a fallback if geolocation is required
在geolocation被请求时要有退路

Our recommendation is to not tie your site or application in to requiring access to the user’s current location, but if your application or site absolutely requires it there are 3rd party solutions that allow you to obtain a best guess of where the person currently is.
我们的推荐是不要把网站或应用与对用户当前位置的访问需求绑定，但如果你的应用或网站绝对需要的话有一些第三方解决方案可以让你获得对当前用户位置最好的推测。

These solutions often work by looking at the user’s IP address and mapping that to the physical addresses registered with the RIPE database. These locations are often not very accurate normally giving you a position of the nearest telecommunications hub to the user, or the nearest cell phone tower. In many cases they might not even be that accurate, especially if the user is on VPN or some other proxy service.
这些方案通常是通过查找用户的IP地址映射到在RIPE数据库中注册的物理地址上。这些位置通常不是很精准一般会给你一个离用户最近的电信出口，或者最近的通信基站。很多情况下连精准都算不上，特别是当用户使用VPN或其他的代理服务时。

Always request access to location on a user gesture
请求访问位置信息一定要取得用户同意

Never try to request access to the user’s current location on page load (like in the following picture). There is no context for the reason why the site is requesting the user’s current location.
千万不要试图在页面加载的时候请求访问用户当前位置(像下图中那样)。没有上下文说明为什么网站要请求用户的当前位置。

The user hasn’t had time to read the page and understand the context of the request. Instead wait for a user gesture on an action that the user would expect to trigger a request.
用户没有时间查看页面并理解请求的上下文。不必在一项行为上等待用户同意，他们会想触发一个请求。

Instead you should give the user a clear call-to-action or an indication that an operation will require access to their location. The user will then be able to more easily associate the system prompt for access with the action they just initiated.
你应该给用户一个清晰的号召或指引表明一个操作将请求访问他们的位置。用户就会更容易把他们刚发起的行为与系统的访问提示结合起来。

Give clear indication that an action will request their location
给出清晰的指示表明该行为会请求他们的位置

In a study by the Google Ads team, when users were asked to book a hotel room in Boston for an upcoming conference on one particular hotels site, they were prompted to share their GPS location immediately after tapping the ‘Find and Book’ call-to-action on the homepage.
在Google Ads团队的研究中，当用户为了近期的会议而在某个酒店网站上预订Boston的酒店房间时，在按下“查找并预订”后马上他们会被提示分享他们的GPS位置。

In some cases users became frustrated because they struggled to understand why she was being shown hotels in San Francisco when she wanted to book a room in Boston.
某些情况下用户变得很沮丧因为他们困惑于为什么当她想订Boston的房间却显示San Francisco的酒店。

A better experience is to make sure the user understands why you’re asking them for location. Add in a well known signifier that is common across devices, such as range finder.
更好的体验是让用户明确理解为什么你要问他们的位置。加上一个广为人知的各设备通用的符号，比如一个测距仪。

Or consider a very explicit call to action such as “Find Near Me.”
或者考虑用明显的操作比如“在我附近查找”。














